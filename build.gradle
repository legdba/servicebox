apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'maven'

ext.revision = 'git rev-list --count HEAD'.execute().text.trim()
ext.hash = 'git rev-parse --short HEAD'.execute().text.trim()
ext.branch = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
group = 'com.brimarx'
version = "r${revision}-${hash}-${ext.branch}"
description = """REST services for demo and test purpose."""
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Gradle Wrapper for predictible builds
// See http://www.gradle.org/docs/current/userguide/gradle_wrapper.html
task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

repositories {
    mavenCentral()
}

dependencies {
    compile     'org.slf4j:slf4j-api:1.7.+',
                'ch.qos.logback:logback-classic:1.1.+',
                'org.glassfish.jersey.core:jersey-server:2.+',
                'org.glassfish.jersey.containers:jersey-container-servlet:2.+',
                'org.glassfish.jersey.media:jersey-media-json-jackson:2.21',
                'org.eclipse.jetty:jetty-server:9.2.3.v20140905',
                'org.eclipse.jetty:jetty-servlet:9.2.3.v20140905',
                'com.beust:jcommander:1.48',
                'com.datastax.cassandra:cassandra-driver-core:2.2.0-rc2'

    testCompile 'org.testng:testng:6.+',
                'org.uncommons:reportng:1.1.4',
                // workaround for a known issue with TestNG 6.x: explicitly add Guice (Gradle will fail to run tests otherwise)
                'com.google.inject:guice:3.0'
}

// ensure that test resources (src/test/resources) are added to CLASSPATH;
// see http://forums.gradle.org/gradle/topics/tests_arent_executed_when_setting_the_test_runtimeclasspath and
// http://gradle.org/docs/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:classpath
sourceSets {
  main {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
  test {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
}

test {
  useTestNG() {
    suiteXmlBuilder().suite(name: 'gradle-testng-mockito-bootstrap', parallel: 'tests') {
      test (name : 'all-tests') {
        packages {
          'package' (name: 'com.brimarx.*')
        }
      }
    }
  }
  options {
    listeners << 'org.uncommons.reportng.HTMLReporter'
    listeners << 'org.uncommons.reportng.JUnitXMLReporter'
  }
  ext.useDefaultListeners = true
  ext.workingDirectory = 'build/'
}

mainClassName = 'com.brimarx.servicebox.EmbededServer'

task buildInfo() {
    println "version : " + version
    println "appname : " + project.name
    println "disttar : " + project.name + '-' + version + '.tar'
}
